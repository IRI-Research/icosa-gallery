# Generated by Django 5.0.6 on 2024-05-29 08:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True
    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("owner", models.BigIntegerField()),
                ("description", models.TextField(blank=True, null=True)),
                ("formats", models.JSONField()),
                (
                    "visibility",
                    models.CharField(
                        choices=[("PUBLIC", "Public"), ("PRIVATE", "Private")],
                        default="PRIVATE",
                        max_length=255,
                    ),
                ),
                ("curated", models.BooleanField(blank=True, null=True)),
                (
                    "polyid",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("polydata", models.JSONField(blank=True, null=True)),
                ("thumbnail", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "assets",
            },
        ),
        migrations.CreateModel(
            name="Oauth2Client",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("client_id", models.CharField(max_length=48, unique=True)),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("client_id_issued_at", models.IntegerField(default=0)),
                ("client_secret_expires_at", models.IntegerField(default=0)),
                ("client_metadata", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "oauth2_client",
            },
        ),
        migrations.CreateModel(
            name="Oauth2Code",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("user_id", models.BigIntegerField()),
                ("code", models.CharField(max_length=120, unique=True)),
                (
                    "client_id",
                    models.CharField(blank=True, max_length=48, null=True),
                ),
                ("redirect_uri", models.TextField(blank=True, null=True)),
                ("response_type", models.TextField(blank=True, null=True)),
                ("auth_time", models.IntegerField()),
                ("code_challenge", models.TextField(blank=True, null=True)),
                (
                    "code_challenge_method",
                    models.CharField(blank=True, max_length=48, null=True),
                ),
                ("scope", models.TextField(blank=True, null=True)),
                ("nonce", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "oauth2_code",
            },
        ),
        migrations.CreateModel(
            name="Oauth2Token",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("user_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "client_id",
                    models.CharField(blank=True, max_length=48, null=True),
                ),
                (
                    "token_type",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "access_token",
                    models.CharField(max_length=255, unique=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("scope", models.TextField(blank=True, null=True)),
                ("issued_at", models.IntegerField()),
                ("access_token_revoked_at", models.IntegerField(default=0)),
                ("refresh_token_revoked_at", models.IntegerField(default=0)),
                ("expires_in", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "oauth2_token",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("url", models.CharField(max_length=255)),
                ("email", models.CharField(max_length=255)),
                ("password", models.BinaryField()),
                ("displayname", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="DeviceCode",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("device_code", models.CharField(max_length=6)),
                ("expiry", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="icosa.user",
                    ),
                ),
            ],
            options={
                "db_table": "devicecodes",
            },
        ),
        migrations.RunSQL(
            sql="\n            CREATE VIEW public.expandedassets AS\n            SELECT assets.id,\n            assets.url,\n            assets.name,\n            assets.owner,\n            users.displayname AS ownername,\n            users.url AS ownerurl,\n            assets.formats,\n            assets.description,\n            assets.visibility,\n            assets.curated,\n            assets.polyid,\n            assets.polydata,\n            assets.thumbnail\n            FROM (public.assets\n            LEFT JOIN public.users ON ((assets.owner = users.id)));\n            ",
            reverse_sql="\n            DROP VIEW IF EXISTS public.expandedassets;\n            ",
        ),
        migrations.AlterField(
            model_name="asset",
            name="visibility",
            field=models.CharField(
                choices=[("PUBLIC", "Public"), ("PRIVATE", "Private")],
                db_default="PRIVATE",
                default="PRIVATE",
                max_length=255,
            ),
        ),
        migrations.RenameField(
            model_name="devicecode",
            old_name="device_code",
            new_name="devicecode",
        ),
    ]
