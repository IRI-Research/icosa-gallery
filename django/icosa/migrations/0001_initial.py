# Generated by Django 5.0.6 on 2025-04-10 13:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import icosa.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkSaveLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('finish_status', models.CharField(blank=True, choices=[('SUCCEEDED', 'Succeeded'), ('FAILED', 'Failed'), ('KILLED', 'Killed'), ('RESUMED', 'Resumed')], max_length=9, null=True)),
                ('kill_sig', models.BooleanField(default=False)),
                ('last_id', models.BigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HiddenMediaFileLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_asset_id', models.BigIntegerField()),
                ('file_name', models.CharField(max_length=1024)),
                ('deleted_from_source', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Oauth2Client',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=48, unique=True)),
                ('client_secret', models.CharField(blank=True, max_length=120, null=True)),
                ('client_id_issued_at', models.IntegerField(default=0)),
                ('client_secret_expires_at', models.IntegerField(default=0)),
                ('client_metadata', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Oauth2Code',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('code', models.CharField(max_length=120, unique=True)),
                ('client_id', models.CharField(blank=True, max_length=48, null=True)),
                ('redirect_uri', models.TextField(blank=True, null=True)),
                ('response_type', models.TextField(blank=True, null=True)),
                ('auth_time', models.IntegerField()),
                ('code_challenge', models.TextField(blank=True, null=True)),
                ('code_challenge_method', models.CharField(blank=True, max_length=48, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('nonce', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Oauth2Token',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('client_id', models.CharField(blank=True, max_length=48, null=True)),
                ('token_type', models.CharField(blank=True, max_length=40, null=True)),
                ('access_token', models.CharField(max_length=255, unique=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('issued_at', models.IntegerField()),
                ('access_token_revoked_at', models.IntegerField(default=0)),
                ('refresh_token_revoked_at', models.IntegerField(default=0)),
                ('expires_in', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AssetOwner',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255, unique=True, verbose_name='User Name / URL')),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('password', models.BinaryField()),
                ('displayname', models.CharField(max_length=255, verbose_name='Display Name')),
                ('description', models.TextField(blank=True, null=True)),
                ('migrated', models.BooleanField(default=False)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('imported', models.BooleanField(default=False)),
                ('is_claimed', models.BooleanField(default=True)),
                ('disable_profile', models.BooleanField(default=False)),
                ('django_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('merged_with', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='icosa.assetowner')),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('formats', models.JSONField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('UNLISTED', 'Unlisted'), ('ARCHIVED', 'Archived')], db_default='PRIVATE', default='PRIVATE', max_length=255)),
                ('curated', models.BooleanField(default=False)),
                ('last_reported_time', models.DateTimeField(blank=True, null=True)),
                ('polyid', models.CharField(blank=True, max_length=255, null=True)),
                ('polydata', models.JSONField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.thumbnail_upload_path)),
                ('preview_image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.preview_image_upload_path)),
                ('thumbnail_contenttype', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('license', models.CharField(blank=True, choices=[('', 'No license chosen'), ('CREATIVE_COMMONS_BY_3_0', 'CC BY Attribution 3.0 International'), ('CREATIVE_COMMONS_BY_ND_3_0', 'CC BY-ND Attribution-NoDerivatives 3.0 International'), ('CREATIVE_COMMONS_BY_4_0', 'CC BY Attribution 4.0 International'), ('CREATIVE_COMMONS_BY_ND_4_0', 'CC BY-ND Attribution-NoDerivatives 4.0 International'), ('CREATIVE_COMMONS_0', 'CC0 1.0 Universal'), ('ALL_RIGHTS_RESERVED', 'All rights reserved')], max_length=50, null=True)),
                ('category', models.CharField(blank=True, choices=[('MISCELLANEOUS', 'Miscellaneous'), ('ANIMALS', 'Animals & Pets'), ('ARCHITECTURE', 'Architecture'), ('ART', 'Art'), ('CULTURE', 'Culture & Humanity'), ('EVENTS', 'Current Events'), ('FOOD', 'Food & Drink'), ('HISTORY', 'History'), ('HOME', 'Furniture & Home'), ('NATURE', 'Nature'), ('OBJECTS', 'Objects'), ('PEOPLE', 'People & Characters'), ('PLACES', 'Places & Scenes'), ('SCIENCE', 'Science'), ('SPORTS', 'Sports & Fitness'), ('TECH', 'Tools & Technology'), ('TRANSPORT', 'Transport'), ('TRAVEL', 'Travel & Leisure')], max_length=255, null=True)),
                ('transform', models.JSONField(blank=True, null=True)),
                ('camera', models.JSONField(blank=True, null=True)),
                ('presentation_params', models.JSONField(blank=True, null=True)),
                ('imported_from', models.CharField(blank=True, max_length=255, null=True)),
                ('remix_ids', models.JSONField(blank=True, null=True)),
                ('historical_likes', models.PositiveIntegerField(default=0)),
                ('historical_views', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('downloads', models.PositiveIntegerField(default=0)),
                ('state', models.CharField(choices=[('BARE', 'Bare'), ('UPLOADING', 'Uploading'), ('COMPLETE', 'Complete'), ('FAILED', 'Failed')], db_default='BARE', default='BARE', max_length=255)),
                ('triangle_count', models.PositiveIntegerField(default=0)),
                ('search_text', models.TextField(blank=True, null=True)),
                ('is_viewer_compatible', models.BooleanField(default=False)),
                ('last_liked_time', models.DateTimeField(blank=True, null=True)),
                ('has_tilt', models.BooleanField(default=False)),
                ('has_blocks', models.BooleanField(default=False)),
                ('has_gltf1', models.BooleanField(default=False)),
                ('has_gltf2', models.BooleanField(default=False)),
                ('has_gltf_any', models.BooleanField(default=False)),
                ('has_fbx', models.BooleanField(default=False)),
                ('has_obj', models.BooleanField(default=False)),
                ('rank', models.FloatField(default=0)),
                ('last_reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_assets', to='icosa.assetowner')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icosa.assetowner')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceCode',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('devicecode', models.CharField(max_length=6)),
                ('expiry', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.assetowner')),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_type', models.CharField(max_length=255)),
                ('zip_archive_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('triangle_count', models.PositiveIntegerField(blank=True, null=True)),
                ('lod_hint', models.PositiveIntegerField(blank=True, null=True)),
                ('role', models.IntegerField(blank=True, choices=[(1, 'ORIGINAL_OBJ_FORMAT'), (2, 'TILT_FORMAT'), (4, 'UNKNOWN_GLTF_FORMAT_A'), (6, 'ORIGINAL_FBX_FORMAT'), (7, 'BLOCKS_FORMAT'), (8, 'USD_FORMAT'), (11, 'HTML_FORMAT'), (12, 'ORIGINAL_GLTF_FORMAT'), (13, 'TOUR_CREATOR_EXPERIENCE'), (15, 'JSON_FORMAT'), (16, 'LULLMODEL_FORMAT'), (17, 'SAND_FORMAT_A'), (18, 'GLB_FORMAT'), (19, 'SAND_FORMAT_B'), (20, 'SANDC_FORMAT'), (21, 'PB_FORMAT'), (22, 'UNKNOWN_GLTF_FORMAT_B'), (24, 'ORIGINAL_TRIANGULATED_OBJ_FORMAT'), (25, 'JPG_BUGGY'), (26, 'USDZ_FORMAT'), (30, 'UPDATED_GLTF_FORMAT'), (32, 'EDITOR_SETTINGS_PB_FORMAT'), (35, 'UNKNOWN_GLTF_FORMAT_C'), (36, 'UNKNOWN_GLB_FORMAT_A'), (38, 'UNKNOWN_GLB_FORMAT_B'), (39, 'TILT_NATIVE_GLTF'), (40, 'USER_SUPPLIED_GLTF'), (1000, 'POLYGONE_TILT_FORMAT'), (1001, 'POLYGONE_BLOCKS_FORMAT'), (1002, 'POLYGONE_GLB_FORMAT'), (1003, 'POLYGONE_GLTF_FORMAT'), (1004, 'POLYGONE_OBJ_FORMAT'), (1005, 'POLYGONE_FBX_FORMAT')], null=True)),
                ('is_preferred_for_viewer', models.BooleanField(default=False)),
                ('is_preferred_for_download', models.BooleanField(default=False)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='preferred_viewer_format_override',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_format_override_for', to='icosa.format'),
        ),
        migrations.CreateModel(
            name='MastheadSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.masthead_image_upload_path)),
                ('url', models.CharField(blank=True, help_text="URL to link to in place of an asset's viewer page.", max_length=1024, null=True)),
                ('headline_text', models.CharField(blank=True, help_text="Text displayed in place of an asset's name.", max_length=1024, null=True)),
                ('sub_text', models.CharField(blank=True, help_text="Text displayed in place of an asset's owner's name.", max_length=1024, null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='icosa.asset')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerAssetLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likedassets', to='icosa.assetowner')),
            ],
        ),
        migrations.AddField(
            model_name='assetowner',
            name='likes',
            field=models.ManyToManyField(blank=True, through='icosa.OwnerAssetLike', to='icosa.asset'),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenttype', models.CharField(max_length=255, null=True)),
                ('file', models.FileField(blank=True, max_length=1024, null=True, upload_to=icosa.models.format_upload_path)),
                ('external_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
                ('format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icosa.format')),
            ],
        ),
        migrations.AddField(
            model_name='format',
            name='root_resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='root_formats', to='icosa.resource'),
        ),
        migrations.AddField(
            model_name='asset',
            name='tags',
            field=models.ManyToManyField(blank=True, to='icosa.tag'),
        ),
        migrations.AddIndex(
            model_name='format',
            index=models.Index(fields=['role'], name='icosa_forma_role_3f3cdd_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_viewer_compatible', 'visibility'], name='icosa_asset_is_view_0ae61f_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['likes'], name='icosa_asset_likes_301593_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['owner'], name='icosa_asset_owner_i_e76513_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_viewer_compatible', 'last_reported_time', 'visibility', 'license'], name='icosa_asset_is_view_9b8d35_idx'),
        ),
    ]
